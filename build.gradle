plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'hama.soombilab'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Mapper
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot 테스트 스타터
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 5
    testCompileOnly 'org.projectlombok:lombok' // Lombok 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // Lombok 테스트 의존성 추가
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.23' // fixture monkey
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3' // JUnit
    testImplementation 'org.testcontainers:testcontainers:1.21.0' // TestContainer
    testImplementation 'org.testcontainers:junit-jupiter:1.21.0' // JUnit TestContainer
    testImplementation 'org.testcontainers:postgresql:1.21.0' // PostgreSQL TestContainer
    testImplementation 'com.github.database-rider:rider-spring:1.44.0' // Database Rider
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // Infra
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // QueryDSL JPA 라이브러리
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta' // QueryDSL 어노테이션 프로세서
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // redis
}

// QueryDsl Build Options
def querydslDir = "/build/generated/queryDsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

jar {
    enabled = false
}

def isOpenApiBuild = System.getenv("IS_OPEN_API_BUILD")?.toBoolean() ?: true
def serverPort = System.getenv("SERVER_PORT") ?: "8805"

bootJar {
    archivesBaseName = 'chodan-java-api'
    archiveFileName = 'chodan-java-api.jar'
    archiveVersion = "0.0.1"
}

bootRun {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005']
    // 만약 OPEN API 빌드라면 서버 포트 강제로 오버라이딩
    if (isOpenApiBuild) {
        systemProperty "server.port", serverPort
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}